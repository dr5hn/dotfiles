[user]
	email = xxxxxxx@gmail.com
	name = Darshan Gada
[core]
	excludesfile = /Users/darshan/.gitignore_global
	filemode = false
	hooksPath = /Users/darshan/.git/hooks
	editor = code -w
	ignorecase = false
[filter "lfs"]
	process = git-lfs filter-process
	required = true
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
[color]
    ui = auto
[color "branch"]
    current = yellow reverse
    local = yellow
    remote = green
[color "diff"]
    meta = yellow bold
    frag = magenta bold
    old = red bold
    new = green bold
[color "status"]
    added = yellow
    changed = green
    untracked = cyan
[help]
    autocorrect = 1
[pull]
	rebase = false
[alias]
	diff = diff --ignore-space-at-eol -b -w --ignore-blank-lines

    # show a pretty log graph
    lg = log --graph --pretty=oneline --abbrev-commit --decorate

    # slight variation of pretty log graph
    l = log --graph --pretty=format:'%Cred%h%Creset %an: %s - %Creset %C(yellow)%d%Creset %Cgreen(%cr)%Creset' --abbrev-commit --date=relative

    # show changed files for a commit
    cf = show --pretty="format:" --name-only

    # stash shortcuts
    sp = stash pop
    sw = stash save
    sl = stash list

    undo = reset --soft HEAD~1
    amend = commit --amend -C HEAD

    cleanup = "!git remote prune origin && git gc && git clean -df && git stash clear"

    # Useful aliases:
    ci = commit
    st = status -sb
    br = branch
    cl = clone
    co = checkout
    br = branch
	ft = fetch -p

    # Ignore/unignore changes to files (like a local .gitignore)
    # http://durdn.com/blog/2012/11/22/must-have-git-aliases-advanced-examples/
    assume = update-index --assume-unchanged
    unassume = update-index --no-assume-unchanged

    assumed = "!git ls-files -v | grep ^h | cut -c 3-"
    assumeall = "!git status -s | awk {'print $2'} | xargs git assume"
    unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"

    skip = update-index --skip-worktree
    unskip = update-index --no-skip-worktree
    skipped = "!git ls-files -v | grep ^S | cut -c 3-"
    unskipall = "!git skipped | xargs git update-index --no-skip-worktree"

[init]
	defaultBranch = main
[fetch]
	prune = true
[push]
	autoSetupRemote = true
